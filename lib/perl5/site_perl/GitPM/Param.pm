package GitPM::Param;

#*******************************************************************************
#-------------------------------------------------------------------------------
# Imports
#-------------------------------------------------------------------------------

use strict;
use warnings;

use Getopt::OO;

#-------------------------------------------------------------------------------

use constant {

  # Boolean syntactic sugar
  TRUE  => 1,
  FALSE => 0,

  # Settings
  HELP => 'help',
};

#*******************************************************************************
#-------------------------------------------------------------------------------
# Globals
#-------------------------------------------------------------------------------

our ( $VERSION, @ISA ); #, @EXPORT, @EXPORT_OK );

$VERSION = '0.1';

# require Exporter;

@ISA = qw( Getopt::OO ); #, Exporter);

# @EXPORT    = qw();
# @EXPORT_OK = qw();

#*******************************************************************************
#-------------------------------------------------------------------------------
# Constructor
#-------------------------------------------------------------------------------

sub new {
  my ( $class, $argv, %template ) = @_;
  my $self;
  
  my $help =  $template{ &HELP };
  delete $template{ &HELP };
  
  eval {
    $self = Getopt::OO->new( $argv, %template );
  };
  
  # There were errors in the parsing process.
  if ( $@ ) {
    if ( $help ) {
      # Parse the errors returned.  I know, this is brittle, but it is the 
      # only way right now without hacking the Getopt::OO module.
      $@ =~ /(Found following errors:.*)$/si;
      die "\n$1\n$help";  
    }
    else {
      die $@;
    }
  }
  
  if ( $help ) {
    $self->{ &HELP } = $help;  
  }
    
  return bless( $self, $class );
}

#*******************************************************************************
#-------------------------------------------------------------------------------
# Accessors / Modifiers
#-------------------------------------------------------------------------------



#*******************************************************************************
#-------------------------------------------------------------------------------
# Utilities
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------

# Return true.
1;
